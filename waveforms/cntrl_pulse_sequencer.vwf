/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("value")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("value[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("value[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "value";
}

SIGNAL("state")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("state[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "state";
}

SIGNAL("state[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "state";
}

SIGNAL("state[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "state";
}

SIGNAL("state[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "state";
}

SIGNAL("setting")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("setting[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "setting";
}

SIGNAL("setting[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "setting";
}

SIGNAL("setting[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "setting";
}

SIGNAL("setting[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "setting";
}

SIGNAL("pulse_sequencer:seq|count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("pulse_sequencer:seq|count[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|count";
}

SIGNAL("pulse_sequencer:seq|high_count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("pulse_sequencer:seq|high_count[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|high_count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|high_count";
}

SIGNAL("pulse_sequencer:seq|low_count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("pulse_sequencer:seq|low_count[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("pulse_sequencer:seq|low_count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "pulse_sequencer:seq|low_count";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("cmd_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("cmd_data[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "cmd_data";
}

SIGNAL("cmd_data[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "cmd_data";
}

SIGNAL("cmd_data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "cmd_data";
}

SIGNAL("cmd_data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "cmd_data";
}

SIGNAL("cmd_data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "cmd_data";
}

SIGNAL("cmd_data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "cmd_data";
}

SIGNAL("cmd_data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "cmd_data";
}

SIGNAL("cmd_data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "cmd_data";
}

SIGNAL("operate")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("mask_bit")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("data_ack")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("value[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("value[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("state[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("state[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("state[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("state[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("setting[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("setting[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("setting[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("setting[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|high_count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("pulse_sequencer:seq|low_count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10000.0;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 13;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
			}
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 230;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
	}
}

TRANSITION_LIST("cmd_data[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL D FOR 80.0;
		LEVEL 0 FOR 200.0;
		LEVEL D FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL D FOR 160.0;
		LEVEL 0 FOR 9080.0;
	}
}

TRANSITION_LIST("cmd_data[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL D FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL D FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL D FOR 160.0;
		LEVEL 0 FOR 9080.0;
	}
}

TRANSITION_LIST("cmd_data[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL D FOR 80.0;
		LEVEL 0 FOR 200.0;
		LEVEL D FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL D FOR 160.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 8920.0;
	}
}

TRANSITION_LIST("cmd_data[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL D FOR 80.0;
		LEVEL 0 FOR 200.0;
		LEVEL D FOR 200.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL D FOR 160.0;
		LEVEL 0 FOR 9080.0;
	}
}

TRANSITION_LIST("cmd_data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL D FOR 80.0;
		LEVEL 0 FOR 200.0;
		LEVEL D FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL D FOR 160.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 8880.0;
	}
}

TRANSITION_LIST("cmd_data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL D FOR 80.0;
		LEVEL 0 FOR 200.0;
		LEVEL D FOR 200.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL D FOR 160.0;
		LEVEL 0 FOR 9080.0;
	}
}

TRANSITION_LIST("cmd_data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL D FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL D FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL D FOR 160.0;
		LEVEL 0 FOR 9080.0;
	}
}

TRANSITION_LIST("cmd_data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL D FOR 80.0;
		LEVEL 0 FOR 200.0;
		LEVEL D FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL D FOR 160.0;
		LEVEL 0 FOR 9080.0;
	}
}

TRANSITION_LIST("operate")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1400.0;
		LEVEL 1 FOR 8600.0;
	}
}

TRANSITION_LIST("mask_bit")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 8880.0;
	}
}

TRANSITION_LIST("data_ack")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("out")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cmd_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "cmd_data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "cmd_data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "cmd_data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "cmd_data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "cmd_data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "cmd_data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "cmd_data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "cmd_data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "mask_bit";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "operate";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "data_ack";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "value";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
	CHILDREN = 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46;
}

DISPLAY_LINE
{
	CHANNEL = "value[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "value[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 0;
	CHILDREN = 48, 49, 50, 51;
}

DISPLAY_LINE
{
	CHANNEL = "state[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "state[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "state[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "state[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "setting";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 0;
	CHILDREN = 53, 54, 55, 56;
}

DISPLAY_LINE
{
	CHANNEL = "setting[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "setting[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "setting[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "setting[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 0;
	CHILDREN = 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 0;
	CHILDREN = 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 104;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 105;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 115;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 116;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 118;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 119;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 120;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 121;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|high_count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 122;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 123;
	TREE_LEVEL = 0;
	CHILDREN = 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 124;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 125;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 126;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 127;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 128;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 129;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 130;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 131;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 132;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 133;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 134;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 135;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 136;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 137;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 138;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 139;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 140;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 141;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 142;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 143;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 144;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 145;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 146;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 147;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 148;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 149;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 150;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 151;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 152;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 153;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 154;
	TREE_LEVEL = 1;
	PARENT = 123;
}

DISPLAY_LINE
{
	CHANNEL = "pulse_sequencer:seq|low_count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 155;
	TREE_LEVEL = 1;
	PARENT = 123;
}

TIME_BAR
{
	TIME = 26675;
	MASTER = TRUE;
}
;
